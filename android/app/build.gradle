apply plugin: 'com.android.application'

android {

    ndkVersion '25.2.9519653'
    namespace 'jp.hiroshiba.voicevox'

    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "jp.hiroshiba.voicevox"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
            // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    sourceSets {
        main {
            jniLibs.srcDir 'jniLibs'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}
def urlZipFile = { name, path, url ->
    File zipFile = new File("$buildDir/download/${name}.zip")
    zipFile.parentFile.mkdirs()
    if (!zipFile.exists()) {
        new URL(url).withInputStream { downloadStream ->
            zipFile.withOutputStream { fileOut ->
                fileOut << downloadStream
            }
        }
    }
    def tree = zipTree(zipFile)
    def fileName = path.split("/")[-1]
    def outFile = file("$buildDir/download/${fileName}")
    tree.visit { file ->
        if (file.getPath() != path) return
        file.copyTo(outFile)
    }
    files(outFile)
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    implementation 'androidx.core:core-ktx:1.8.0'
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')

    // TODO: ちゃんと公開されたらそれに置き換える
    implementation urlZipFile(
        "voicevoxcore-android_0.15.0-preview.16",
        "jp/hiroshiba/voicevoxcore/voicevoxcore-android/0.15.0-preview.16/voicevoxcore-android-0.15.0-preview.16.aar",
        "https://github.com/VOICEVOX/voicevox_core/releases/download/0.15.0-preview.16/java_packages.zip"
    )

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: "2.10.1"

    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: "3.0.2"

    // https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api
    implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: "2.1.1"

    implementation group: 'com.microsoft.onnxruntime', name: 'onnxruntime-android', version: "1.14.0"
}

apply from: 'capacitor.build.gradle'
apply plugin: 'org.jetbrains.kotlin.android'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch (Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
